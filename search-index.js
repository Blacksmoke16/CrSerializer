crystal_doc_search_index_callback({"repository_name":"github.com/Blacksmoke16/CrSerializer","body":"# CrSerializer\n[![Latest release](https://img.shields.io/github/release/Blacksmoke16/CrSerializer.svg?style=flat-square)](https://github.com/Blacksmoke16/CrSerializer/releases)\n\nExtensible annotation based serialization/deserialization library inspired by [JMS Serializer Annotations](https://jmsyst.com/libs/serializer/master/reference/annotations).\n\n## Documentation\n\nEverything is documented in the [API Docs](https://blacksmoke16.github.io/CrSerializer/CrSerializer.html).\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  CrSerializer:\n    github: Blacksmoke16/CrSerializer\n```\n\n## Contributing\n\n1. Fork it (https://github.com/Blacksmoke16/CrSerializer/fork)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Blacksmoke16](https://github.com/Blacksmoke16) Blacksmoke16 - creator, maintainer\n","program":{"html_id":"github.com/Blacksmoke16/CrSerializer/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CRS","path":"CRS.html","kind":"alias","full_name":"CRS","name":"CRS","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"CrSerializer.cr","line_number":37,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/CrSerializer.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":true,"aliased":"CrSerializer::Annotations","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Shorthand alias to the `CrSerializer::Annotations` module.\n\n```\n@[CRS::Expose]\n@[CRS::Groups(\"detail\", \"list\")]\nproperty title : String\n```","summary":"<p>Shorthand alias to the <code><a href=\"CrSerializer/Annotations.html\">CrSerializer::Annotations</a></code> module.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer","path":"CrSerializer.html","kind":"module","full_name":"CrSerializer","name":"CrSerializer","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"CrSerializer.cr","line_number":18,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/CrSerializer.cr"},{"filename":"property_metadata.cr","line_number":1,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/property_metadata.cr"},{"filename":"formats/json.cr","line_number":51,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/formats/json.cr"},{"filename":"CrSerializer.cr","line_number":98,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/CrSerializer.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Annotation based serialization/deserialization library.\n\n## Features\n* Options are defined on ivars, no custom DSL.\n* Can be used in conjunction with other shards, such as ORMs, as long as they use properties and allow adding annotations.\n* `*::Serializable` compatible API.\n\n## Concepts\n* `CrSerializer::Annotations` - Used to control how a property gets serialized/deserialized.\n* `CrSerializer::ExclusionStrategies` - Determines which properties within a class/struct should be serialized and deserialized.  Custom strategies can be defined.\n* `CrSerializer::Context` - Represents runtime data about the current serialization/deserialization action.  Can be reopened to add custom data.\n* `CrSerializer::Format` - Represents a valid serialization/deserialization format.  Can be included into a module to register a custom format.\n\n## Example Usage\n```\n@[CRS::ExclusionPolicy(:all)]\n@[CRS::AccessorOrder(:alphabetical)]\nclass Example\n  include CrSerializer\n\n  @[CRS::Expose]\n  @[CRS::Groups(\"details\")]\n  property name : String\n\n  @[CRS::Expose]\n  @[CRS::Name(deserialize: \"a_prop\", serialize: \"a_prop\")]\n  property some_prop : String\n\n  @[CRS::Expose]\n  @[CRS::Groups(\"default\", \"details\")]\n  @[CRS::Accessor(getter: get_title)]\n  property title : String\n\n  @[CRS::ReadOnly]\n  property password : String?\n\n  getter first_name : String?\n  getter last_name : String?\n\n  @[CRS::PostDeserialize]\n  def split_name : Nil\n    @first_name, @last_name = @name.split(' ')\n  end\n\n  @[CRS::VirtualProperty]\n  def get_val : String\n    \"VAL\"\n  end\n\n  private def get_title : String\n    @title.downcase\n  end\nend\n\nobj = Example.from_json %({\"name\":\"FIRST LAST\",\"a_prop\":\"STR\",\"title\":\"TITLE\",\"password\":\"monkey123\"})\nobj.inspect                                                             # => #<Example:0x7f3e3b106740 @name=\"FIRST LAST\", @some_prop=\"STR\", @title=\"TITLE\", @password=nil, @first_name=\"FIRST\", @last_name=\"LAST\">\nobj.to_json                                                             # => {\"a_prop\":\"STR\",\"get_val\":\"VAL\",\"name\":\"FIRST LAST\",\"title\":\"title\"}\nobj.to_json CrSerializer::SerializationContext.new.groups = [\"details\"] # => {\"name\":\"FIRST LAST\",\"title\":\"title\"}\n```","summary":"<p>Annotation based serialization/deserialization library.</p>","class_methods":[],"constructors":[{"id":"deserialize(format:CrSerializer::Format.class,string_or_io:String|IO,context:CrSerializer::DeserializationContext=CrSerializer::DeserializationContext.new):self-class-method","html_id":"deserialize(format:CrSerializer::Format.class,string_or_io:String|IO,context:CrSerializer::DeserializationContext=CrSerializer::DeserializationContext.new):self-class-method","name":"deserialize","doc":"Deserializes the given *string_or_io* into `self` from the given *format*, optionally with the given *context*.\n\nNOTE: This method is defined within a macro included hook.  This definition is simply for documentation.","summary":"<p>Deserializes the given <em>string_or_io</em> into <code>self</code> from the given <em>format</em>, optionally with the given <em>context</em>.</p>","abstract":false,"args":[{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"CrSerializer::Format.class"},{"name":"string_or_io","doc":null,"default_value":"","external_name":"string_or_io","restriction":"String | IO"},{"name":"context","doc":null,"default_value":"CrSerializer::DeserializationContext.new","external_name":"context","restriction":"CrSerializer::DeserializationContext"}],"args_string":"(format : <span class=\"t\">CrSerializer</span><span class=\"t\">::</span><span class=\"t\">Format</span>.<span class=\"k\">class</span>, string_or_io : String | IO, context : CrSerializer::DeserializationContext = <span class=\"t\">CrSerializer</span><span class=\"t\">::</span><span class=\"t\">DeserializationContext</span>.<span class=\"k\">new</span>) : <span class=\"k\">self</span>","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/CrSerializer.cr#L160","def":{"name":"deserialize","args":[{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"CrSerializer::Format.class"},{"name":"string_or_io","doc":null,"default_value":"","external_name":"string_or_io","restriction":"String | IO"},{"name":"context","doc":null,"default_value":"CrSerializer::DeserializationContext.new","external_name":"context","restriction":"CrSerializer::DeserializationContext"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":""}}],"instance_methods":[{"id":"serialize(format:CrSerializer::Format.class,context:CrSerializer::SerializationContext=CrSerializer::SerializationContext.new):String-instance-method","html_id":"serialize(format:CrSerializer::Format.class,context:CrSerializer::SerializationContext=CrSerializer::SerializationContext.new):String-instance-method","name":"serialize","doc":"Serializes `self` into the given *format*, optionally with the given *context*.","summary":"<p>Serializes <code>self</code> into the given <em>format</em>, optionally with the given <em>context</em>.</p>","abstract":false,"args":[{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"CrSerializer::Format.class"},{"name":"context","doc":null,"default_value":"CrSerializer::SerializationContext.new","external_name":"context","restriction":"CrSerializer::SerializationContext"}],"args_string":"(format : <span class=\"t\">CrSerializer</span><span class=\"t\">::</span><span class=\"t\">Format</span>.<span class=\"k\">class</span>, context : CrSerializer::SerializationContext = <span class=\"t\">CrSerializer</span><span class=\"t\">::</span><span class=\"t\">SerializationContext</span>.<span class=\"k\">new</span>) : String","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/CrSerializer.cr#L164","def":{"name":"serialize","args":[{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"CrSerializer::Format.class"},{"name":"context","doc":null,"default_value":"CrSerializer::SerializationContext.new","external_name":"context","restriction":"CrSerializer::SerializationContext"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"{% if true %}\n\n      # Initialize the context.  Currently just used to apply default exclusion strategies\n      context.init\n\n      # Run any pre serialization methods\n      {% for method in @type.methods.select do |m|\n  m.annotation(CRS::PreSerialize)\nend %}\n        {{ method.name }}\n      {% end %}\n\n      properties = serialization_properties\n\n      # Apply exclusion strategies if one is defined\n      if strategy = context.exclusion_strategy\n        properties.reject! { |property| strategy.skip_property? property, context }\n      end\n\n      # Reject properties that shoud be skipped when empty\n      # or properties that should be skipped when nil\n      properties.reject! do |property|\n        val = property.value\n        skip_when_empty = property.skip_when_empty? && val.responds_to? :empty? && val.empty?\n        skip_nil = !context.emit_nil? && val.nil?\n\n        skip_when_empty || skip_nil\n      end\n\n      # Get the serialized output for the set of properties\n      output = format.serialize properties, context\n\n      # Run any post serialization methods\n      {% for method in @type.methods.select do |m|\n  m.annotation(CRS::PostSerialize)\nend %}\n        {{ method.name }}\n      {% end %}\n\n      # Return the serialized data\n      output\n    {% end %}"}}],"macros":[],"types":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations","path":"CrSerializer/Annotations.html","kind":"module","full_name":"CrSerializer::Annotations","name":"Annotations","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":3,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/annotations.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer","kind":"module","full_name":"CrSerializer","name":"CrSerializer"},"doc":"[CrSerializer](./index.html) uses annotations to control how an object gets serialized and deserialized.\nThis module includes all the default serialization and deserialization annotations. The `CRS` alias can be used as a shorthand when applying the annotations.","summary":"<p><a href=\"./index.html\" target=\"_blank\">CrSerializer</a> uses annotations to control how an object gets serialized and deserialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations/Accessor","path":"CrSerializer/Annotations/Accessor.html","kind":"annotation","full_name":"CrSerializer::Annotations::Accessor","name":"Accessor","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":24,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/annotations.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations","kind":"module","full_name":"CrSerializer::Annotations","name":"Annotations"},"doc":"Defines the method to use to get/set the property's value.\n\nTODO: Implement `setter`.\n\n```\nclass Example\n  include CrSerializer\n\n  def initialize; end\n\n  @[CRS::Accessor(getter: get_foo)]\n  property foo : String = \"foo\"\n\n  private def get_foo : String\n    @foo.upcase\n  end\nend\n\nExample.new.serialize JSON # => {\"foo\":\"FOO\"}\n```","summary":"<p>Defines the method to use to get/set the property's value.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations/AccessorOrder","path":"CrSerializer/Annotations/AccessorOrder.html","kind":"annotation","full_name":"CrSerializer::Annotations::AccessorOrder","name":"AccessorOrder","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":89,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/annotations.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations","kind":"module","full_name":"CrSerializer::Annotations","name":"Annotations"},"doc":"Defines the order of properties within a class/struct.  Valid values: `:alphabetical`, and `:custom`.\n\nBy default properties are ordered in the order in which they were defined.\n```\nclass Default\n  include CrSerializer\n\n  def initialize; end\n\n  property a : String = \"A\"\n  property z : String = \"Z\"\n  property two : String = \"two\"\n  property one : String = \"one\"\n  property a_a : Int32 = 123\n\n  @[CRS::VirtualProperty]\n  def get_val : String\n    \"VAL\"\n  end\nend\n\nDefault.new.to_json # => {\"a\":\"A\",\"z\":\"Z\",\"two\":\"two\",\"one\":\"one\",\"a_a\":123,\"get_val\":\"VAL\"}\n\n@[CRS::AccessorOrder(:alphabetical)]\nclass Abc\n  include CrSerializer\n\n  def initialize; end\n\n  property a : String = \"A\"\n  property z : String = \"Z\"\n  property two : String = \"two\"\n  property one : String = \"one\"\n  property a_a : Int32 = 123\n\n  @[CRS::VirtualProperty]\n  def get_val : String\n    \"VAL\"\n  end\nend\n\nAbc.new.to_json # => {\"a\":\"A\",\"a_a\":123,\"get_val\":\"VAL\",\"one\":\"one\",\"two\":\"two\",\"z\":\"Z\"}\n\n@[CRS::AccessorOrder(:custom, order: [\"two\", \"z\", \"get_val\", \"a\", \"one\", \"a_a\"])]\nclass Custom\n  include CrSerializer\n\n  def initialize; end\n\n  property a : String = \"A\"\n  property z : String = \"Z\"\n  property two : String = \"two\"\n  property one : String = \"one\"\n  property a_a : Int32 = 123\n\n  @[CRS::VirtualProperty]\n  def get_val : String\n    \"VAL\"\n  end\nend\n\nCustom.new.to_json # => {\"two\":\"two\",\"z\":\"Z\",\"get_val\":\"VAL\",\"a\":\"A\",\"one\":\"one\",\"a_a\":123}\n```","summary":"<p>Defines the order of properties within a class/struct.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations/Discriminator","path":"CrSerializer/Annotations/Discriminator.html","kind":"annotation","full_name":"CrSerializer::Annotations::Discriminator","name":"Discriminator","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":92,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/annotations.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations","kind":"module","full_name":"CrSerializer::Annotations","name":"Annotations"},"doc":"TODO: Implement this.","summary":"<p><span class=\"flag orange\">TODO</span>  Implement this.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations/Exclude","path":"CrSerializer/Annotations/Exclude.html","kind":"annotation","full_name":"CrSerializer::Annotations::Exclude","name":"Exclude","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":112,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/annotations.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations","kind":"module","full_name":"CrSerializer::Annotations","name":"Annotations"},"doc":"Indicates that a property should not be serialized/deserialized when used with `CrSerializer::ExclusionPolicy::None`.\n\nAlso see, `CRS::IgnoreOnDeserialize` and `CRS::IgnoreOnSerialize`.\n```\n@[CRS::ExclusionPolicy(:none)]\nclass Example\n  include CrSerializer\n\n  def initialize; end\n\n  property name : String = \"Jim\"\n\n  @[CRS::Exclude]\n  property password : String? = \"monkey\"\nend\n\nExample.new.to_json # => {\"name\":\"Jim\"}\n```","summary":"<p>Indicates that a property should not be serialized/deserialized when used with <code><a href=\"../../CrSerializer/ExclusionPolicy.html#None\">CrSerializer::ExclusionPolicy::None</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations/ExclusionPolicy","path":"CrSerializer/Annotations/ExclusionPolicy.html","kind":"annotation","full_name":"CrSerializer::Annotations::ExclusionPolicy","name":"ExclusionPolicy","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":119,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/annotations.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations","kind":"module","full_name":"CrSerializer::Annotations","name":"Annotations"},"doc":"Defines the default exclusion policy to use on a class.  Valid values: `:none`, and `:all`.\n\nUsed with `CRS::Expose` and `CRS::Exclude`.\n\nSee`CrSerializer::ExclusionPolicy`.","summary":"<p>Defines the default exclusion policy to use on a class.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations/Expose","path":"CrSerializer/Annotations/Expose.html","kind":"annotation","full_name":"CrSerializer::Annotations::Expose","name":"Expose","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":138,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/annotations.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations","kind":"module","full_name":"CrSerializer::Annotations","name":"Annotations"},"doc":"Indicates that a property should be serialized/deserialized when used with `CrSerializer::ExclusionPolicy::All`.\n\n```\n@[CRS::ExclusionPolicy(:all)]\nclass Example\n  include CrSerializer\n\n  def initialize; end\n\n  @[CRS::Expose]\n  property name : String = \"Jim\"\n\n  property password : String? = \"monkey\"\nend\n\nExample.new.to_json # => {\"name\":\"Jim\"}\n```","summary":"<p>Indicates that a property should be serialized/deserialized when used with <code><a href=\"../../CrSerializer/ExclusionPolicy.html#All\">CrSerializer::ExclusionPolicy::All</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations/Groups","path":"CrSerializer/Annotations/Groups.html","kind":"annotation","full_name":"CrSerializer::Annotations::Groups","name":"Groups","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":144,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/annotations.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations","kind":"module","full_name":"CrSerializer::Annotations","name":"Annotations"},"doc":"Defines the group(s) a property belongs to.  Properties are automatically added to the `default` group\nif no groups are explicitly defined.\n\nSee `CrSerializer::ExclusionStrategies::Groups`.","summary":"<p>Defines the group(s) a property belongs to.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations/IgnoreOnDeserialize","path":"CrSerializer/Annotations/IgnoreOnDeserialize.html","kind":"annotation","full_name":"CrSerializer::Annotations::IgnoreOnDeserialize","name":"IgnoreOnDeserialize","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":168,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/annotations.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations","kind":"module","full_name":"CrSerializer::Annotations","name":"Annotations"},"doc":"Indicates that a property should not be set on deserialization, but should be serialized.\n\n```\nclass Example\n  include CrSerializer\n\n  def initialize; end\n\n  property name : String\n\n  @[CRS::IgnoreOnDeserialize]\n  property password : String?\nend\n\nobj = Example.deserialize %({\"name\":\"Jim\",\"password\":\"monkey123\"})\n\nobj.password # => nil\n\nobj.password = \"foobar\"\n\nobj.to_json # => {\"name\":\"Jim\",\"password\":\"foobar\"}\n```","summary":"<p>Indicates that a property should not be set on deserialization, but should be serialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations/IgnoreOnSerialize","path":"CrSerializer/Annotations/IgnoreOnSerialize.html","kind":"annotation","full_name":"CrSerializer::Annotations::IgnoreOnSerialize","name":"IgnoreOnSerialize","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":190,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/annotations.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations","kind":"module","full_name":"CrSerializer::Annotations","name":"Annotations"},"doc":"Indicates that a property should be set on deserialization, but should not be serialized.\n\n```\nclass Example\n  include CrSerializer\n\n  def initialize; end\n\n  property name : String\n\n  @[CRS::IgnoreOnSerialize]\n  property password : String\nend\n\nobj = Example.from_json %({\"name\":\"Jim\",\"password\":\"monkey123\"})\n\nobj.password # => \"monkey123\"\n\nobj.to_json # => {\"name\":\"Jim\"}\n```","summary":"<p>Indicates that a property should be set on deserialization, but should not be serialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations/Name","path":"CrSerializer/Annotations/Name.html","kind":"annotation","full_name":"CrSerializer::Annotations::Name","name":"Name","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":315,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/annotations.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations","kind":"module","full_name":"CrSerializer::Annotations","name":"Annotations"},"doc":"Defines the name to use on deserialization and serialization.  If not provided, the name defaults to the name of the property.\nAlso allows defining aliases that can be used for that property when deserializing.\n\n```\nclass Example\n  include CrSerializer\n\n  def initialize; end\n\n  @[CRS::Name(serialize: \"myAddress\")]\n  property my_home_address : String = \"123 Fake Street\"\n\n  @[CRS::Name(deserialize: \"some_key\", serialize: \"a_value\")]\n  property both_names : String = \"str\"\n\n  @[CRS::Name(aliases: [\"val\", \"value\", \"some_value\"])]\n  property some_value : String? = \"some_val\"\nend\n\nExample.new.to_json # => {\"myAddress\":\"123 Fake Street\",\"a_value\":\"str\",\"some_value\":\"some_val\"}\nobj = Example.from_json %({\"my_home_address\":\"555 Mason Ave\",\"some_key\":\"deserialized from diff key\",\"value\":\"some_other_val\"})\nobj.my_home_address # => \"555 Mason Ave\"\nobj.both_names      # => \"deserialized from diff key\"\nobj.some_value      # => \"some_other_val\"\n```","summary":"<p>Defines the name to use on deserialization and serialization.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations/PostDeserialize","path":"CrSerializer/Annotations/PostDeserialize.html","kind":"annotation","full_name":"CrSerializer::Annotations::PostDeserialize","name":"PostDeserialize","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":269,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/annotations.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations","kind":"module","full_name":"CrSerializer::Annotations","name":"Annotations"},"doc":"Defines a callback method(s) that are ran directly after the object has been deserialized.\n\n```\nrecord Example, name : String, first_name : String?, last_name : String? do\n  include CrSerializer\n\n  @[CRS::PostDeserialize]\n  def split_name : Nil\n    @first_name, @last_name = @name.split(' ')\n  end\nend\n\nobj = Example.deserialize JSON, %({\"name\":\"Jon Snow\"})\nobj.name       # => Jon Snow\nobj.first_name # => Jon\nobj.last_name  # => Snow\n```","summary":"<p>Defines a callback method(s) that are ran directly after the object has been deserialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations/PostSerialize","path":"CrSerializer/Annotations/PostSerialize.html","kind":"annotation","full_name":"CrSerializer::Annotations::PostSerialize","name":"PostSerialize","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":250,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/annotations.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations","kind":"module","full_name":"CrSerializer::Annotations","name":"Annotations"},"doc":"Defines a callback method(s) that are ran directly after the object has been serialized.\n\n```\n@[CRS::ExclusionPolicy(:all)]\nclass Example\n  include CrSerializer\n\n  def initialize; end\n\n  @[CRS::Expose]\n  private getter name : String?\n\n  property first_name : String = \"Jon\"\n  property last_name : String = \"Snow\"\n\n  @[CRS::PreSerialize]\n  def pre_ser : Nil\n    @name = \"#{first_name} #{last_name}\"\n  end\n\n  @[CRS::PostSerialize]\n  def post_ser : Nil\n    @name = nil\n  end\nend\n\nExample.new.to_json # => {\"name\":\"Jon Snow\"}\n```","summary":"<p>Defines a callback method(s) that are ran directly after the object has been serialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations/PreSerialize","path":"CrSerializer/Annotations/PreSerialize.html","kind":"annotation","full_name":"CrSerializer::Annotations::PreSerialize","name":"PreSerialize","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":220,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/annotations.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations","kind":"module","full_name":"CrSerializer::Annotations","name":"Annotations"},"doc":"Defines a callback method(s) that are ran directly before the object is serialized.\n\n```\n@[CRS::ExclusionPolicy(:all)]\nclass Example\n  include CrSerializer\n\n  def initialize; end\n\n  @[CRS::Expose]\n  private getter name : String?\n\n  property first_name : String = \"Jon\"\n  property last_name : String = \"Snow\"\n\n  @[CRS::PreSerialize]\n  def pre_ser : Nil\n    @name = \"#{first_name} #{last_name}\"\n  end\n\n  @[CRS::PostSerialize]\n  def post_ser : Nil\n    @name = nil\n  end\nend\n\nExample.new.to_json # => {\"name\":\"Jon Snow\"}\n```","summary":"<p>Defines a callback method(s) that are ran directly before the object is serialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations/ReadOnly","path":"CrSerializer/Annotations/ReadOnly.html","kind":"annotation","full_name":"CrSerializer::Annotations::ReadOnly","name":"ReadOnly","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":288,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/annotations.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations","kind":"module","full_name":"CrSerializer::Annotations","name":"Annotations"},"doc":"Indicates that a property is read-only and cannot be set during deserialization.\n\nNOTE: The property must be nilable or have a default value.\n```\nclass ReadOnly\n  include CrSerializer\n\n  property name : String\n\n  @[CRS::ReadOnly]\n  property password : String?\nend\n\nobj = ReadOnly.from_json %({\"name\":\"Fred\",\"password\":\"password1\"})\nobj.name     # => \"Fred\"\nobj.password # => nil\n```","summary":"<p>Indicates that a property is read-only and cannot be set during deserialization.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations/Since","path":"CrSerializer/Annotations/Since.html","kind":"annotation","full_name":"CrSerializer::Annotations::Since","name":"Since","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":321,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/annotations.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations","kind":"module","full_name":"CrSerializer::Annotations","name":"Annotations"},"doc":"Represents the first version a property was available.\n\nSee `CrSerializer::ExclusionStrategies::Version`.\nNOTE: Value must be a `SemanticVersion` version.","summary":"<p>Represents the first version a property was available.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations/Skip","path":"CrSerializer/Annotations/Skip.html","kind":"annotation","full_name":"CrSerializer::Annotations::Skip","name":"Skip","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":339,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/annotations.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations","kind":"module","full_name":"CrSerializer::Annotations","name":"Annotations"},"doc":"Indicates that a property should not be serialized or deserialized.\n\n```\nclass Example\n  include CrSerializer\n\n  def initialize; end\n\n  property name : String = \"Jim\"\n\n  @[CRS::Skip]\n  property password : String? = \"monkey\"\nend\n\nExample.new.to_json # => {\"name\":\"Fred\"}\n```","summary":"<p>Indicates that a property should not be serialized or deserialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations/SkipWhenEmpty","path":"CrSerializer/Annotations/SkipWhenEmpty.html","kind":"annotation","full_name":"CrSerializer::Annotations::SkipWhenEmpty","name":"SkipWhenEmpty","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":367,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/annotations.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations","kind":"module","full_name":"CrSerializer::Annotations","name":"Annotations"},"doc":"Indicates that a property should not be serialized when it is empty.\n\nNOTE: Can be used on any type that defines an `#empty?` method.\n```\nclass SkipWhenEmpty\n  include CrSerializer\n\n  def initialize; end\n\n  property id : Int64 = 1\n\n  @[CRS::SkipWhenEmpty]\n  property value : String = \"value\"\n\n  @[CRS::SkipWhenEmpty]\n  property values : Array(String) = %w(one two three)\nend\n\nobj = SkipWhenEmpty.new\nobj.to_json # => {\"id\":1,\"value\":\"value\",\"values\":[\"one\",\"two\",\"three\"]}\n\nobj.value = \"\"\nobj.values = [] of String\n\nobj.to_json # => {\"id\":1}\n```","summary":"<p>Indicates that a property should not be serialized when it is empty.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations/Until","path":"CrSerializer/Annotations/Until.html","kind":"annotation","full_name":"CrSerializer::Annotations::Until","name":"Until","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":373,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/annotations.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations","kind":"module","full_name":"CrSerializer::Annotations","name":"Annotations"},"doc":"Represents the last version a property was available.\n\nSee `CrSerializer::ExclusionStrategies::Version`.\nNOTE: Value must be a `SemanticVersion` version.","summary":"<p>Represents the last version a property was available.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations/VirtualProperty","path":"CrSerializer/Annotations/VirtualProperty.html","kind":"annotation","full_name":"CrSerializer::Annotations::VirtualProperty","name":"VirtualProperty","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":401,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/annotations.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Annotations","kind":"module","full_name":"CrSerializer::Annotations","name":"Annotations"},"doc":"Can be applied to a method to make it act like a property.\n```\nclass Example\n  include CrSerializer\n\n  def initialize; end\n\n  property foo : String = \"foo\"\n\n  property bar : String = \"bar\"\n\n  @[CRS::VirtualProperty]\n  @[CRS::SerializedName(\"testing\")]\n  def some_method : Bool\n    false\n  end\n\n  @[CRS::VirtualProperty]\n  def get_val : String\n    \"VAL\"\n  end\nend\n\nExample.new.serialize JSON # => {\"foo\":\"foo\",\"bar\":\"bar\",\"testing\":false,\"get_val\":\"VAL\"}\n```\nNOTE: The return type restriction _MUST_ be defined.","summary":"<p>Can be applied to a method to make it act like a property.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Context","path":"CrSerializer/Context.html","kind":"class","full_name":"CrSerializer::Context","name":"Context","abstract":true,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"context.cr","line_number":8,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/context.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/DeserializationContext","kind":"class","full_name":"CrSerializer::DeserializationContext","name":"DeserializationContext"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/SerializationContext","kind":"class","full_name":"CrSerializer::SerializationContext","name":"SerializationContext"}],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer","kind":"module","full_name":"CrSerializer","name":"CrSerializer"},"doc":"Stores runtime data about the current action.\n\nSuch as what serialization groups/version to use when serializing.\n\nNOTE: Cannot be used for more than one action.","summary":"<p>Stores runtime data about the current action.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"add_exclusion_strategy(strategy:CrSerializer::ExclusionStrategies::ExclusionStrategy):self-instance-method","html_id":"add_exclusion_strategy(strategy:CrSerializer::ExclusionStrategies::ExclusionStrategy):self-instance-method","name":"add_exclusion_strategy","doc":"Adds *strategy* to `self`.\n\n* `exclusion_strategy` is set to *strategy* if there previously was no strategy.\n* `exclusion_strategy` is set to `CrSerializer::ExclusionStrategies::Disjunct` if there was a `exclusion_strategy` already set.\n* *strategy* is added to the `CrSerializer::ExclusionStrategies::Disjunct` if there are multiple strategies.","summary":"<p>Adds <em>strategy</em> to <code>self</code>.</p>","abstract":false,"args":[{"name":"strategy","doc":null,"default_value":"","external_name":"strategy","restriction":"CrSerializer::ExclusionStrategies::ExclusionStrategy"}],"args_string":"(strategy : CrSerializer::ExclusionStrategies::ExclusionStrategy) : <span class=\"k\">self</span>","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/context.cr#L25","def":{"name":"add_exclusion_strategy","args":[{"name":"strategy","doc":null,"default_value":"","external_name":"strategy","restriction":"CrSerializer::ExclusionStrategies::ExclusionStrategy"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"current_strategy = @exclusion_strategy\ncase current_strategy\nwhen Nil\n  @exclusion_strategy = strategy\nwhen CrSerializer::ExclusionStrategies::Disjunct\n  current_strategy.members << strategy\nelse\n  @exclusion_strategy = CrSerializer::ExclusionStrategies::Disjunct.new([current_strategy, strategy])\nend\nself\n"}},{"id":"exclusion_strategy:CrSerializer::ExclusionStrategies::ExclusionStrategy?-instance-method","html_id":"exclusion_strategy:CrSerializer::ExclusionStrategies::ExclusionStrategy?-instance-method","name":"exclusion_strategy","doc":"The `CrSerializer::ExclusionStrategies::ExclusionStrategy` being used.","summary":"<p>The <code><a href=\"../CrSerializer/ExclusionStrategies/ExclusionStrategy.html\">CrSerializer::ExclusionStrategies::ExclusionStrategy</a></code> being used.</p>","abstract":false,"args":[],"args_string":" : CrSerializer::ExclusionStrategies::ExclusionStrategy?","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/context.cr#L10","def":{"name":"exclusion_strategy","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CrSerializer::ExclusionStrategies::ExclusionStrategy | ::Nil","visibility":"Public","body":"@exclusion_strategy"}},{"id":"groups:Array(String)?-instance-method","html_id":"groups:Array(String)?-instance-method","name":"groups","doc":"Returns the serialization groups, if any, currently set on `self`.","summary":"<p>Returns the serialization groups, if any, currently set on <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : Array(String)?","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/context.cr#L15","def":{"name":"groups","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String) | ::Nil","visibility":"Public","body":"@groups"}},{"id":"groups=(groups:Array(String)):self-instance-method","html_id":"groups=(groups:Array(String)):self-instance-method","name":"groups=","doc":"Sets the group(s) to compare against properties' `CRS::Groups` annotations.\n\nAdds a `CrSerializer::ExclusionStrategies::Groups` automatically if set.","summary":"<p>Sets the group(s) to compare against properties' <code><a href=\"../CrSerializer/Annotations/Groups.html\">CRS::Groups</a></code> annotations.</p>","abstract":false,"args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"Array(String)"}],"args_string":"(groups : Array(String)) : <span class=\"k\">self</span>","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/context.cr#L55","def":{"name":"groups=","args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"if groups.empty?\n  raise(ArgumentError.new(\"Groups cannot be empty\"))\nend\n@groups = groups\nself\n"}},{"id":"version:SemanticVersion?-instance-method","html_id":"version:SemanticVersion?-instance-method","name":"version","doc":"Returns the version, if any, currently set on `self`.","summary":"<p>Returns the version, if any, currently set on <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : SemanticVersion?","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/context.cr#L18","def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SemanticVersion | ::Nil","visibility":"Public","body":"@version"}},{"id":"version=(version:String):self-instance-method","html_id":"version=(version:String):self-instance-method","name":"version=","doc":"Sets the version to compare against properties' `CRS::Since` and `CRS::Until` annotations.\n\nAdds a `CrSerializer::ExclusionStrategies::Version` automatically if set.","summary":"<p>Sets the version to compare against properties' <code><a href=\"../CrSerializer/Annotations/Since.html\">CRS::Since</a></code> and <code><a href=\"../CrSerializer/Annotations/Until.html\">CRS::Until</a></code> annotations.</p>","abstract":false,"args":[{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":"String"}],"args_string":"(version : String) : <span class=\"k\">self</span>","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/context.cr#L66","def":{"name":"version=","args":[{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"@version = SemanticVersion.parse(version)\nself\n"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/DeserializationContext","path":"CrSerializer/DeserializationContext.html","kind":"class","full_name":"CrSerializer::DeserializationContext","name":"DeserializationContext","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Context","kind":"class","full_name":"CrSerializer::Context","name":"Context"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Context","kind":"class","full_name":"CrSerializer::Context","name":"Context"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"deserialization_context.cr","line_number":4,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/deserialization_context.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer","kind":"module","full_name":"CrSerializer","name":"CrSerializer"},"doc":"Stores runtime data about the current deserialization action.","summary":"<p>Stores runtime data about the current deserialization action.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Exceptions","path":"CrSerializer/Exceptions.html","kind":"module","full_name":"CrSerializer::Exceptions","name":"Exceptions","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"exceptions/logic_exception.cr","line_number":3,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/exceptions/logic_exception.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer","kind":"module","full_name":"CrSerializer","name":"CrSerializer"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Exceptions/JSONParseError","path":"CrSerializer/Exceptions/JSONParseError.html","kind":"class","full_name":"CrSerializer::Exceptions::JSONParseError","name":"JSONParseError","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Exceptions/ParseError","kind":"class","full_name":"CrSerializer::Exceptions::ParseError","name":"ParseError"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Exceptions/ParseError","kind":"class","full_name":"CrSerializer::Exceptions::ParseError","name":"ParseError"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"exceptions/parse_exception.cr","line_number":8,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/exceptions/parse_exception.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Exceptions","kind":"module","full_name":"CrSerializer::Exceptions","name":"Exceptions"},"doc":"Raised in the event of a JSON parse error.  Such as type mistmach, missing key, etc.","summary":"<p>Raised in the event of a JSON parse error.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Exceptions/LogicError","path":"CrSerializer/Exceptions/LogicError.html","kind":"class","full_name":"CrSerializer::Exceptions::LogicError","name":"LogicError","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"exceptions/logic_exception.cr","line_number":3,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/exceptions/logic_exception.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Exceptions","kind":"module","full_name":"CrSerializer::Exceptions","name":"Exceptions"},"doc":"Raised when `CrSerializer` is used incorrectly.  For example\ntrying to re-use a `CrSerializer::SerializationContext` object.","summary":"<p>Raised when <code><a href=\"../../CrSerializer.html\">CrSerializer</a></code> is used incorrectly.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Exceptions/ParseError","path":"CrSerializer/Exceptions/ParseError.html","kind":"class","full_name":"CrSerializer::Exceptions::ParseError","name":"ParseError","abstract":true,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"exceptions/parse_exception.cr","line_number":4,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/exceptions/parse_exception.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Exceptions/JSONParseError","kind":"class","full_name":"CrSerializer::Exceptions::JSONParseError","name":"JSONParseError"}],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Exceptions","kind":"module","full_name":"CrSerializer::Exceptions","name":"Exceptions"},"doc":"Parent class of all parse errors.\nCan be used to rescue all parse errors\nregardless of format.","summary":"<p>Parent class of all parse errors.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/ExclusionPolicy","path":"CrSerializer/ExclusionPolicy.html","kind":"enum","full_name":"CrSerializer::ExclusionPolicy","name":"ExclusionPolicy","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"exclusion_policy.cr","line_number":4,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/exclusion_policy.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"All","name":"All","value":"0","doc":"Excludes all properties by default.  Only properties annotated with `CRS::Expose` will be serialized/deserialized.","summary":"<p>Excludes all properties by default.</p>"},{"id":"None","name":"None","value":"1","doc":"Excludes no properties by default.  All properties except those annotated with `CRS::Exclude` will be serialized/deserialized.","summary":"<p>Excludes no properties by default.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer","kind":"module","full_name":"CrSerializer","name":"CrSerializer"},"doc":"Defines the default exclusion strategy for all properties within a class/struct.\n\nSee `CRS::ExclusionPolicy`.","summary":"<p>Defines the default exclusion strategy for all properties within a class/struct.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"all?-instance-method","html_id":"all?-instance-method","name":"all?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/exclusion_policy.cr#L6","def":{"name":"all?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == All"}},{"id":"none?-instance-method","html_id":"none?-instance-method","name":"none?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/exclusion_policy.cr#L9","def":{"name":"none?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == None"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/ExclusionStrategies","path":"CrSerializer/ExclusionStrategies.html","kind":"module","full_name":"CrSerializer::ExclusionStrategies","name":"ExclusionStrategies","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"exclusion_strategies/exclusion_strategy.cr","line_number":7,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/exclusion_strategies/exclusion_strategy.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer","kind":"module","full_name":"CrSerializer","name":"CrSerializer"},"doc":"Exclusion strategies are used to determine which properties within a class/struct should be serialized and deserialized.\nThis module includes all of the built in exclusion strategies.\n\nSee `CrSerializer::ExclusionStrategies::ExclusionStrategy` for high level exclusion strategy documentation, as well each each specific strategy for more details.","summary":"<p>Exclusion strategies are used to determine which properties within a class/struct should be serialized and deserialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/ExclusionStrategies/Disjunct","path":"CrSerializer/ExclusionStrategies/Disjunct.html","kind":"struct","full_name":"CrSerializer::ExclusionStrategies::Disjunct","name":"Disjunct","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/ExclusionStrategies/ExclusionStrategy","kind":"struct","full_name":"CrSerializer::ExclusionStrategies::ExclusionStrategy","name":"ExclusionStrategy"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/ExclusionStrategies/ExclusionStrategy","kind":"struct","full_name":"CrSerializer::ExclusionStrategies::ExclusionStrategy","name":"ExclusionStrategy"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"exclusion_strategies/disjunct.cr","line_number":6,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/exclusion_strategies/disjunct.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/ExclusionStrategies","kind":"module","full_name":"CrSerializer::ExclusionStrategies","name":"ExclusionStrategies"},"doc":"Wraps an `Array(CrSerializer::ExclusionStrategies::ExclusionStrategy)`, excluding a property if any member skips it.\n\nUsed internally to allow multiple exclusion strategies to be used within a single instance variable for `CrSerializer::Context#add_exclusion_strategy`.","summary":"<p>Wraps an <code>Array(<a href=\"../../CrSerializer/ExclusionStrategies/ExclusionStrategy.html\">CrSerializer::ExclusionStrategies::ExclusionStrategy</a>)</code>, excluding a property if any member skips it.</p>","class_methods":[],"constructors":[{"id":"new(members:Array(ExclusionStrategy))-class-method","html_id":"new(members:Array(ExclusionStrategy))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"members","doc":null,"default_value":"","external_name":"members","restriction":"Array(ExclusionStrategy)"}],"args_string":"(members : Array(ExclusionStrategy))","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/exclusion_strategies/disjunct.cr#L10","def":{"name":"new","args":[{"name":"members","doc":null,"default_value":"","external_name":"members","restriction":"Array(ExclusionStrategy)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(members)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"members:Array(ExclusionStrategy)-instance-method","html_id":"members:Array(ExclusionStrategy)-instance-method","name":"members","doc":"The wrapped exclusion strategies.","summary":"<p>The wrapped exclusion strategies.</p>","abstract":false,"args":[],"args_string":" : Array(ExclusionStrategy)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/exclusion_strategies/disjunct.cr#L8","def":{"name":"members","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(ExclusionStrategy)","visibility":"Public","body":"@members"}},{"id":"skip_property?(metadata:PropertyMetadata,context:Context):Bool-instance-method","html_id":"skip_property?(metadata:PropertyMetadata,context:Context):Bool-instance-method","name":"skip_property?","doc":"Returns `true` if a property should _NOT_ be serialized/deserialized.","summary":"<p>Returns <code>true</code> if a property should <em>NOT</em> be serialized/deserialized.</p>","abstract":false,"args":[{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"PropertyMetadata"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Context"}],"args_string":"(metadata : PropertyMetadata, context : Context) : Bool","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/exclusion_strategies/disjunct.cr#L13","def":{"name":"skip_property?","args":[{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"PropertyMetadata"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Context"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@members.any?(&.skip_property?(metadata, context))"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/ExclusionStrategies/ExclusionStrategy","path":"CrSerializer/ExclusionStrategies/ExclusionStrategy.html","kind":"struct","full_name":"CrSerializer::ExclusionStrategies::ExclusionStrategy","name":"ExclusionStrategy","abstract":true,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"exclusion_strategies/exclusion_strategy.cr","line_number":11,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/exclusion_strategies/exclusion_strategy.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/ExclusionStrategies/Disjunct","kind":"struct","full_name":"CrSerializer::ExclusionStrategies::Disjunct","name":"Disjunct"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/ExclusionStrategies/Groups","kind":"struct","full_name":"CrSerializer::ExclusionStrategies::Groups","name":"Groups"},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/ExclusionStrategies/Version","kind":"struct","full_name":"CrSerializer::ExclusionStrategies::Version","name":"Version"}],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/ExclusionStrategies","kind":"module","full_name":"CrSerializer::ExclusionStrategies","name":"ExclusionStrategies"},"doc":"Base struct of all exclusion strategies.\n\nCustom exclusion strategies can be defined by simply inheriting from the base struct and implementing the `#skip_property?` method.","summary":"<p>Base struct of all exclusion strategies.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/exclusion_strategies/exclusion_strategy.cr#L15","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"skip_property?(metadata:PropertyMetadata,context:Context):Bool-instance-method","html_id":"skip_property?(metadata:PropertyMetadata,context:Context):Bool-instance-method","name":"skip_property?","doc":"Returns `true` if a property should _NOT_ be serialized/deserialized.","summary":"<p>Returns <code>true</code> if a property should <em>NOT</em> be serialized/deserialized.</p>","abstract":true,"args":[{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"PropertyMetadata"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Context"}],"args_string":"(metadata : PropertyMetadata, context : Context) : Bool","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/exclusion_strategies/exclusion_strategy.cr#L13","def":{"name":"skip_property?","args":[{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"PropertyMetadata"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Context"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/ExclusionStrategies/Groups","path":"CrSerializer/ExclusionStrategies/Groups.html","kind":"struct","full_name":"CrSerializer::ExclusionStrategies::Groups","name":"Groups","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/ExclusionStrategies/ExclusionStrategy","kind":"struct","full_name":"CrSerializer::ExclusionStrategies::ExclusionStrategy","name":"ExclusionStrategy"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/ExclusionStrategies/ExclusionStrategy","kind":"struct","full_name":"CrSerializer::ExclusionStrategies::ExclusionStrategy","name":"ExclusionStrategy"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"exclusion_strategies/groups.cr","line_number":35,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/exclusion_strategies/groups.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/ExclusionStrategies","kind":"module","full_name":"CrSerializer::ExclusionStrategies","name":"ExclusionStrategies"},"doc":"Allows creating different views of your objects by limiting which properties get serialized, based on the group(s) each property is a part of.\n\nIt is enabled by default when using `CrSerializer::Context#groups=`.\n\n```\nclass Example\n  include CrSerializer\n\n  def initialize; end\n\n  @[CRS::Groups(\"list\", \"details\")]\n  property id : Int64 = 1\n\n  @[CRS::Groups(\"list\", \"details\")]\n  property title : String = \"TITLE\"\n\n  @[CRS::Groups(\"list\")]\n  property comment_summaries : Array(String) = [\"Sentence 1.\", \"Sentence 2.\"]\n\n  @[CRS::Groups(\"details\")]\n  property comments : Array(String) = [\"Sentence 1.  Another sentence.\", \"Sentence 2.  Some other stuff.\"]\n\n  property created_at : Time = Time.utc(2019, 1, 1)\n  property updated_at : Time?\nend\n\nexample = Example.new\n\nexample.to_json(CrSerializer::SerializationContext.new.groups = [\"list\"])            # => {\"id\":1,\"title\":\"TITLE\",\"comment_summaries\":[\"Sentence 1.\",\"Sentence 2.\"]}\nexample.to_json(CrSerializer::SerializationContext.new.groups = [\"details\"])         # => {\"id\":1,\"title\":\"TITLE\",\"comments\":[\"Sentence 1.  Another sentence.\",\"Sentence 2.  Some other stuff.\"]}\nexample.to_json(CrSerializer::SerializationContext.new.groups = [\"list\", \"default\"]) # => {\"id\":1,\"title\":\"TITLE\",\"comment_summaries\":[\"Sentence 1.\",\"Sentence 2.\"],\"created_at\":\"2019-01-01T00:00:00Z\"}\n```","summary":"<p>Allows creating different views of your objects by limiting which properties get serialized, based on the group(s) each property is a part of.</p>","class_methods":[],"constructors":[{"id":"new(groups:Array(String))-class-method","html_id":"new(groups:Array(String))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"Array(String)"}],"args_string":"(groups : Array(String))","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/exclusion_strategies/groups.cr#L38","def":{"name":"new","args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(groups)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(*groups:String)-class-method","html_id":"new(*groups:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"String"}],"args_string":"(*groups : String)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/exclusion_strategies/groups.cr#L40","def":{"name":"new","args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"String"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(groups.to_a)"}}],"instance_methods":[{"id":"skip_property?(metadata:PropertyMetadata,context:Context):Bool-instance-method","html_id":"skip_property?(metadata:PropertyMetadata,context:Context):Bool-instance-method","name":"skip_property?","doc":"Returns `true` if a property should _NOT_ be serialized/deserialized.","summary":"<p>Returns <code>true</code> if a property should <em>NOT</em> be serialized/deserialized.</p>","abstract":false,"args":[{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"PropertyMetadata"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Context"}],"args_string":"(metadata : PropertyMetadata, context : Context) : Bool","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/exclusion_strategies/groups.cr#L45","def":{"name":"skip_property?","args":[{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"PropertyMetadata"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Context"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(metadata.groups & @groups).empty?"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/ExclusionStrategies/Version","path":"CrSerializer/ExclusionStrategies/Version.html","kind":"struct","full_name":"CrSerializer::ExclusionStrategies::Version","name":"Version","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/ExclusionStrategies/ExclusionStrategy","kind":"struct","full_name":"CrSerializer::ExclusionStrategies::ExclusionStrategy","name":"ExclusionStrategy"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/ExclusionStrategies/ExclusionStrategy","kind":"struct","full_name":"CrSerializer::ExclusionStrategies::ExclusionStrategy","name":"ExclusionStrategy"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"exclusion_strategies/version.cr","line_number":25,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/exclusion_strategies/version.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/ExclusionStrategies","kind":"module","full_name":"CrSerializer::ExclusionStrategies","name":"ExclusionStrategies"},"doc":"Serialize properties based on a `SemanticVersion` string.\n\nIt is enabled by default when using `CrSerializer::Context#version=`.\n\n```\nclass Example\n  include CrSerializer\n\n  def initialize; end\n\n  @[CRS::Until(\"1.0.0\")]\n  property name : String = \"Legacy Name\"\n\n  @[CRS::Since(\"1.1.0\")]\n  property name2 : String = \"New Name\"\nend\n\nexample = Example.new\n\nexample.to_json(CrSerializer::SerializationContext.new.version = \"0.30.0\") # => {\"name\":\"Legacy Name\"}\nexample.to_json(CrSerializer::SerializationContext.new.version = \"1.2.0\")  # => {\"name2\":\"New Name\"}\n```","summary":"<p>Serialize properties based on a <code>SemanticVersion</code> string.</p>","class_methods":[],"constructors":[{"id":"new(version:SemanticVersion)-class-method","html_id":"new(version:SemanticVersion)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":"SemanticVersion"}],"args_string":"(version : SemanticVersion)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/exclusion_strategies/version.cr#L28","def":{"name":"new","args":[{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":"SemanticVersion"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(version)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"skip_property?(metadata:PropertyMetadata,context:Context):Bool-instance-method","html_id":"skip_property?(metadata:PropertyMetadata,context:Context):Bool-instance-method","name":"skip_property?","doc":"Returns `true` if a property should _NOT_ be serialized/deserialized.","summary":"<p>Returns <code>true</code> if a property should <em>NOT</em> be serialized/deserialized.</p>","abstract":false,"args":[{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"PropertyMetadata"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Context"}],"args_string":"(metadata : PropertyMetadata, context : Context) : Bool","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/exclusion_strategies/version.cr#L31","def":{"name":"skip_property?","args":[{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"PropertyMetadata"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Context"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if (since_version = metadata.since_version) && @version < since_version\n  return true\nend\nif (until_version = metadata.until_version) && @version >= until_version\n  return true\nend\nfalse\n"}},{"id":"version:SemanticVersion-instance-method","html_id":"version:SemanticVersion-instance-method","name":"version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : SemanticVersion","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/exclusion_strategies/version.cr#L26","def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SemanticVersion","visibility":"Public","body":"@version"}}],"macros":[],"types":[]}]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Format","path":"CrSerializer/Format.html","kind":"module","full_name":"CrSerializer::Format","name":"Format","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"CrSerializer.cr","line_number":18,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/CrSerializer.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer","kind":"module","full_name":"CrSerializer","name":"CrSerializer"},"doc":"Can be included into a module to register that\nmodule as a serialization format.\n\nThe including module would have to implement the required logic\nfor handling the process of serializing and deserializing the data.\n```\nmodule CustomFormat\n  include CrSerializer::Format\nend\n\nsome_obj.serialize CustomFormat\nSomeType.deserialize CustomFormat, input_string_or_io\n```","summary":"<p>Can be included into a module to register that module as a serialization format.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/PropertyMetadata","path":"CrSerializer/PropertyMetadata.html","kind":"struct","full_name":"CrSerializer::PropertyMetadata(IvarType, ClassType)","name":"PropertyMetadata","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Metadata","kind":"module","full_name":"CrSerializer::Metadata","name":"Metadata"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"property_metadata.cr","line_number":9,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/property_metadata.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Metadata","kind":"module","full_name":"CrSerializer::Metadata","name":"Metadata"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer","kind":"module","full_name":"CrSerializer","name":"CrSerializer"},"doc":"Represents metadata associated with a property.\n\nAll properties are defined via annotations applied to the property,\nor pulled directly from the ivar declaration.","summary":"<p>Represents metadata associated with a property.</p>","class_methods":[],"constructors":[{"id":"new(name:String,external_name:String,value:IvarType=nil,skip_when_empty:Bool=false,groups:Array(String)=[&quot;default&quot;],aliases:Array(String)=[]ofString,since_version:SemanticVersion?=nil,until_version:SemanticVersion?=nil,type:IvarType.class=IvarType,class__arg0:ClassType.class=ClassType)-class-method","html_id":"new(name:String,external_name:String,value:IvarType=nil,skip_when_empty:Bool=false,groups:Array(String)=[&amp;quot;default&amp;quot;],aliases:Array(String)=[]ofString,since_version:SemanticVersion?=nil,until_version:SemanticVersion?=nil,type:IvarType.class=IvarType,class__arg0:ClassType.class=ClassType)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"external_name","doc":null,"default_value":"","external_name":"external_name","restriction":"String"},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":"IvarType"},{"name":"skip_when_empty","doc":null,"default_value":"false","external_name":"skip_when_empty","restriction":"Bool"},{"name":"groups","doc":null,"default_value":"[\"default\"]","external_name":"groups","restriction":"Array(String)"},{"name":"aliases","doc":null,"default_value":"[] of String","external_name":"aliases","restriction":"Array(String)"},{"name":"since_version","doc":null,"default_value":"nil","external_name":"since_version","restriction":"SemanticVersion | ::Nil"},{"name":"until_version","doc":null,"default_value":"nil","external_name":"until_version","restriction":"SemanticVersion | ::Nil"},{"name":"type","doc":null,"default_value":"IvarType","external_name":"type","restriction":"IvarType.class"},{"name":"__arg0","doc":null,"default_value":"ClassType","external_name":"class","restriction":"ClassType.class"}],"args_string":"(name : String, external_name : String, value : IvarType = <span class=\"n\">nil</span>, skip_when_empty : Bool = <span class=\"n\">false</span>, groups : Array(String) = [<span class=\"s\">&quot;default&quot;</span>], aliases : Array(String) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>, since_version : SemanticVersion? = <span class=\"n\">nil</span>, until_version : SemanticVersion? = <span class=\"n\">nil</span>, type : <span class=\"t\">IvarType</span>.<span class=\"k\">class</span> = <span class=\"t\">IvarType</span>, class __arg0 : <span class=\"t\">ClassType</span>.<span class=\"k\">class</span> = <span class=\"t\">ClassType</span>)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/property_metadata.cr#L52","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"external_name","doc":null,"default_value":"","external_name":"external_name","restriction":"String"},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":"IvarType"},{"name":"skip_when_empty","doc":null,"default_value":"false","external_name":"skip_when_empty","restriction":"Bool"},{"name":"groups","doc":null,"default_value":"[\"default\"]","external_name":"groups","restriction":"Array(String)"},{"name":"aliases","doc":null,"default_value":"[] of String","external_name":"aliases","restriction":"Array(String)"},{"name":"since_version","doc":null,"default_value":"nil","external_name":"since_version","restriction":"SemanticVersion | ::Nil"},{"name":"until_version","doc":null,"default_value":"nil","external_name":"until_version","restriction":"SemanticVersion | ::Nil"},{"name":"type","doc":null,"default_value":"IvarType","external_name":"type","restriction":"IvarType.class"},{"name":"__arg0","doc":null,"default_value":"ClassType","external_name":"class","restriction":"ClassType.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = PropertyMetadata(IvarType, ClassType).allocate\n_.initialize(name, external_name, value, skip_when_empty, groups, aliases, since_version, until_version, type, __arg0)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"aliases:Array(String)-instance-method","html_id":"aliases:Array(String)-instance-method","name":"aliases","doc":"Deserialize this property from the property's name or any name in *aliases*.\n\nSee `CRS::Name`.","summary":"<p>Deserialize this property from the property's name or any name in <em>aliases</em>.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/property_metadata.cr#L45","def":{"name":"aliases","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@aliases"}},{"id":"class:ClassType.class-instance-method","html_id":"class:ClassType.class-instance-method","name":"class","doc":"The class that the property is part of.","summary":"<p>The class that the property is part of.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">ClassType</span>.<span class=\"k\">class</span>","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/property_metadata.cr#L25","def":{"name":"class","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ClassType.class","visibility":"Public","body":"@class"}},{"id":"external_name:String-instance-method","html_id":"external_name:String-instance-method","name":"external_name","doc":"The name that should be used for serialization/deserialization.","summary":"<p>The name that should be used for serialization/deserialization.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/property_metadata.cr#L16","def":{"name":"external_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@external_name"}},{"id":"groups:Array(String)-instance-method","html_id":"groups:Array(String)-instance-method","name":"groups","doc":"The serialization groups this property belongs to.\n\nSee `CrSerializer::ExclusionStrategies::Groups`.","summary":"<p>The serialization groups this property belongs to.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/property_metadata.cr#L40","def":{"name":"groups","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@groups"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":"The name of the property.","summary":"<p>The name of the property.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/property_metadata.cr#L13","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"since_version:SemanticVersion?-instance-method","html_id":"since_version:SemanticVersion?-instance-method","name":"since_version","doc":"Represents the first version this property is available.\n\nSee `CrSerializer::ExclusionStrategies::Version`.","summary":"<p>Represents the first version this property is available.</p>","abstract":false,"args":[],"args_string":" : SemanticVersion?","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/property_metadata.cr#L30","def":{"name":"since_version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SemanticVersion | ::Nil","visibility":"Public","body":"@since_version"}},{"id":"since_version=(since_version:SemanticVersion?)-instance-method","html_id":"since_version=(since_version:SemanticVersion?)-instance-method","name":"since_version=","doc":"Represents the first version this property is available.\n\nSee `CrSerializer::ExclusionStrategies::Version`.","summary":"<p>Represents the first version this property is available.</p>","abstract":false,"args":[{"name":"since_version","doc":null,"default_value":"","external_name":"since_version","restriction":"SemanticVersion | ::Nil"}],"args_string":"(since_version : SemanticVersion?)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/property_metadata.cr#L30","def":{"name":"since_version=","args":[{"name":"since_version","doc":null,"default_value":"","external_name":"since_version","restriction":"SemanticVersion | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@since_version = since_version"}},{"id":"skip_when_empty?:Bool-instance-method","html_id":"skip_when_empty?:Bool-instance-method","name":"skip_when_empty?","doc":"If this property should not be serialized if it is empty.\n\nSee `CRS::SkipWhenEmpty`.","summary":"<p>If this property should not be serialized if it is empty.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/property_metadata.cr#L50","def":{"name":"skip_when_empty?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@skip_when_empty"}},{"id":"type:IvarType.class-instance-method","html_id":"type:IvarType.class-instance-method","name":"type","doc":"The type of the property.","summary":"<p>The type of the property.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">IvarType</span>.<span class=\"k\">class</span>","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/property_metadata.cr#L22","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IvarType.class","visibility":"Public","body":"@type"}},{"id":"until_version:SemanticVersion?-instance-method","html_id":"until_version:SemanticVersion?-instance-method","name":"until_version","doc":"Represents the last version this property was available.\n\nSee `CrSerializer::ExclusionStrategies::Version`.","summary":"<p>Represents the last version this property was available.</p>","abstract":false,"args":[],"args_string":" : SemanticVersion?","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/property_metadata.cr#L35","def":{"name":"until_version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SemanticVersion | ::Nil","visibility":"Public","body":"@until_version"}},{"id":"until_version=(until_version:SemanticVersion?)-instance-method","html_id":"until_version=(until_version:SemanticVersion?)-instance-method","name":"until_version=","doc":"Represents the last version this property was available.\n\nSee `CrSerializer::ExclusionStrategies::Version`.","summary":"<p>Represents the last version this property was available.</p>","abstract":false,"args":[{"name":"until_version","doc":null,"default_value":"","external_name":"until_version","restriction":"SemanticVersion | ::Nil"}],"args_string":"(until_version : SemanticVersion?)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/property_metadata.cr#L35","def":{"name":"until_version=","args":[{"name":"until_version","doc":null,"default_value":"","external_name":"until_version","restriction":"SemanticVersion | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@until_version = until_version"}},{"id":"value:IvarType-instance-method","html_id":"value:IvarType-instance-method","name":"value","doc":"The value of the property.","summary":"<p>The value of the property.</p>","abstract":false,"args":[],"args_string":" : IvarType","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/property_metadata.cr#L19","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IvarType","visibility":"Public","body":"@value"}}],"macros":[],"types":[]},{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/SerializationContext","path":"CrSerializer/SerializationContext.html","kind":"class","full_name":"CrSerializer::SerializationContext","name":"SerializationContext","abstract":false,"superclass":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Context","kind":"class","full_name":"CrSerializer::Context","name":"Context"},"ancestors":[{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer/Context","kind":"class","full_name":"CrSerializer::Context","name":"Context"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Blacksmoke16/CrSerializer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"serialization_context.cr","line_number":4,"url":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/serialization_context.cr"}],"repository_name":"github.com/Blacksmoke16/CrSerializer","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Blacksmoke16/CrSerializer/CrSerializer","kind":"module","full_name":"CrSerializer","name":"CrSerializer"},"doc":"Stores runtime data about the current serialization action.","summary":"<p>Stores runtime data about the current serialization action.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"emit_nil=(emit_nil:Bool)-instance-method","html_id":"emit_nil=(emit_nil:Bool)-instance-method","name":"emit_nil=","doc":"If `null` values should be emitted.\n\n```\nclass Example\n  include CrSerializer\n\n  def initialize; end\n\n  property name : String = \"Jim\"\n  property age : Int32? = nil\nend\n\nExample.new.to_json # => {\"name\":\"Jim\"}\n\ncontext = CrSerializer::SerializationContext.new\ncontext.emit_nil = true\n\nExample.new.to_json context # => {\"name\":\"Jim\",\"age\":null}\n```","summary":"<p>If <code>null</code> values should be emitted.</p>","abstract":false,"args":[{"name":"emit_nil","doc":null,"default_value":"","external_name":"emit_nil","restriction":"Bool"}],"args_string":"(emit_nil : Bool)","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/serialization_context.cr#L24","def":{"name":"emit_nil=","args":[{"name":"emit_nil","doc":null,"default_value":"","external_name":"emit_nil","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@emit_nil = emit_nil"}},{"id":"emit_nil?:Bool-instance-method","html_id":"emit_nil?:Bool-instance-method","name":"emit_nil?","doc":"If `null` values should be emitted.\n\n```\nclass Example\n  include CrSerializer\n\n  def initialize; end\n\n  property name : String = \"Jim\"\n  property age : Int32? = nil\nend\n\nExample.new.to_json # => {\"name\":\"Jim\"}\n\ncontext = CrSerializer::SerializationContext.new\ncontext.emit_nil = true\n\nExample.new.to_json context # => {\"name\":\"Jim\",\"age\":null}\n```","summary":"<p>If <code>null</code> values should be emitted.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Blacksmoke16/CrSerializer/blob/65c527c8d52ebff79e8164768b5396c31f9a6bb3/src/serialization_context.cr#L24","def":{"name":"emit_nil?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@emit_nil"}}],"macros":[],"types":[]}]}]}})